server:
  port: 8080
spring:
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/oauth2?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
#    username: root
#  session:
#    store-type: redis
#    timeout: 1800
  application:
    # 应用名称
    name: gateway-master
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      discovery:
        locator:
          # 是否和服务注册与发现组件结合，设置为 true 后可以直接使用应用名称调用服务
          enabled: true
      # 路由（routes：路由，它由唯一标识（ID）、目标服务地址（uri）、一组断言（predicates）和一组过滤器组成（filters）。filters 不是必需参数。）
      routes:
        # 路由标识（id：标识，具有唯一性）
        - id: noti-router
          # 目标服务地址（uri：地址，请求转发后的地址）
          uri: http://localhost:8081
          # 路由条件（predicates：断言，匹配 HTTP 请求内容）
          predicates:
            - Path=/v1/not/**
          filters:
            - StripPrefix=2
            - PreserveHostHeader
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        # 路由标识（id：标识，具有唯一性）
        - id: auth-router
          # 目标服务地址（uri：地址，请求转发后的地址）
          uri: http://localhost:8078
          # 路由条件（predicates：断言，匹配 HTTP 请求内容）
          predicates:
            - Path=/login,/logout
          filters:
            - PreserveHostHeader
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        # 路由标识（id：标识，具有唯一性）
        - id: user-router
          # 目标服务地址（uri：地址，请求转发后的地址）
          uri: http://localhost:8082
          # 路由条件（predicates：断言，匹配 HTTP 请求内容）
          predicates:
            - Path=/v1/usr/**
          filters:
            - StripPrefix=2
            - PreserveHostHeader
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        # 路由标识（id：标识，具有唯一性）
        - id: todo-router
          # 目标服务地址（uri：地址，请求转发后的地址）
          uri: http://localhost:8083
          # 路由条件（predicates：断言，匹配 HTTP 请求内容）
          predicates:
            - Path=/v1/tod/**
          filters:
            - StripPrefix=2
            - PreserveHostHeader
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
eureka:
  instance:
    # 使用 ip 代替实例名
    prefer-ip-address: true
    # 实例的主机名
    hostname: ${spring.cloud.client.ip-address}
    # 实例的 ID 规则
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
  client:
    serviceUrl:
      # 注册中心地址
      defaultZone: http://${eureka.instance.hostname}:8079/eureka/
logging:
  level:
    # log 级别
    org.springframework.cloud.gateway: debug